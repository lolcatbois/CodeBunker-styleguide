{"version":3,"sources":["components/pages/Introduction.jsx","components/modules/ColorModules.jsx","assets/copy.svg","assets/check.svg","components/modules/CollapsibleCode.jsx","components/pages/Colors.jsx","components/modules/TypoModules.jsx","components/pages/Typography.jsx","components/modules/FormModules.jsx","components/pages/Forms.jsx","components/pages/Methodology.jsx","components/modules/ButtonModules.jsx","components/pages/Buttons.jsx","App.js","reportWebVitals.js","index.js"],"names":["Introduction","className","ColorModule","CollapsibleCode","props","useState","copied","setCopied","transitionTime","easing","trigger","triggerWhenOpen","text","code","onCopy","alt","src","checkSvg","copySvg","wrapLines","showLineNumber","style","gruvboxDark","language","Colors","Fonts","FontSizes","Typography","LoginForm","for","autofocus","autocomplete","type","name","id","value","onClick","e","preventDefault","href","ContentForm","enctype","action","accept-charset","method","multiple","Forms","Methodology","SubmitButton","event","disableEvent","TagButton","button1","setButton1","button2","setButton2","Buttons","App","basename","process","exact","to","activeClassName","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.761d9d0e.chunk.js","sourcesContent":["import SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\nexport default function Introduction() {\n  return (\n    <div className=\"page\">\n      <section>\n        <h1>CodeBunker</h1>\n        <h2>Introduction</h2>\n        <p>\n          Welcome to the Coding World of what is CodeBunker.\n        </p>\n        <p>\n          This Style Guide is aimed at legacy/minimal Coding Projects.\n        </p>\n      </section>\n      <section>\n        <h2>What is CodeBunker?</h2>\n        <p>\n          CodeBunker is a Programming oriented Social Media Platform for easy communication and sharing of Files, Tips and Code Snippets.\n        </p>\n      </section>\n      <section>\n        <h2>What does the CodeBunker Styleguide aim for?</h2>\n        <p>\n          The whole principle is to keep things as minimal as possible but with subtle additions, which still make the components interesting.\n        </p>\n        <p>\n          As of now, CodeBunker Style Guide allows for easy usage of Colors, minimal Typography Elements and is heavily focused on interactive Buttons and Forms.\n        </p>\n      </section>\n    </div>\n  );\n}\n","import \"../../styles/modules/ColorModule.scss\";\n\nexport function ColorModule() {\n  return (\n    <div className=\"module color-module\">\n      <div className=\"color1\">\n        #282828\n        <span>background-sexy</span>\n      </div>\n      <div className=\"color2\">\n        #C4C4C4\n        <span>background-light</span>\n      </div>\n      <div className=\"color3\">\n        #E6C973\n        <span>highlight</span>\n      </div>\n      <div className=\"color4\">\n        #91A18D\n        <span>accent</span>\n      </div>\n      <div className=\"color5\">\n        #91A18D\n        <span>background-dark</span>\n      </div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/copy.07377e65.svg\";","export default __webpack_public_path__ + \"static/media/check.8a64e619.svg\";","import SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { gruvboxDark } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport Collapsible from \"react-collapsible\";\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { useState } from \"react\";\nimport copySvg from \"../../assets/copy.svg\"\nimport checkSvg from \"../../assets/check.svg\"\n\nexport default function CollapsibleCode(props) {\n\n    const [copied, setCopied] = useState(false);\n\n    return (\n        <Collapsible transitionTime={350} easing=\"ease-in-out\" trigger=\"> SHOW\" triggerWhenOpen=\"< CLOSE\">\n\n            <CopyToClipboard text={props.code} onCopy={() => setCopied(true)}>\n                <div className=\"copy-field\">\n                    {copied\n                        ? <img alt=\"copy-icon\" src={checkSvg} />\n                        : <img alt=\"copied-icon\" src={copySvg} />\n                    }\n                </div>\n            </CopyToClipboard>\n\n            <div className=\"syntax-wrapper\">\n                <SyntaxHighlighter wrapLines={true} showLineNumber style={gruvboxDark} language={props.language}>\n                    {props.code}\n                </SyntaxHighlighter>\n            </div>\n\n        </Collapsible >\n    );\n\n}\n","import { ColorModule } from \"../modules/ColorModules\";\nimport CollapsibleCode from \"../modules/CollapsibleCode\";\n\nconst scssColors = `$accent: #91a18d;\n$highlight: #e6c973;\n$background-light: #c4c4c4;\n$background-dark: #9b9b9b;\n$background-sexy: #282828;\n`\n\nexport default function Colors() {\n    return (\n        <div className=\"page\">\n            <section>\n                <h1>COLORS</h1>\n                <p>\n                    We mainly focus on various shades of gray (less than 50),\n                    with a dark background. a highlight color and an accent color.\n                </p>\n            </section>\n\n            <section>\n                <h2>Color Scheme</h2>\n                <ColorModule />\n                <h3>SCSS Code</h3>\n                <CollapsibleCode code={scssColors} language=\"scss\" />\n            </section>\n        </div>\n    );\n}\n","import \"../../styles/modules/TypoModule.scss\"\n\nexport function Fonts() {\n  return (\n    <div className=\"module fonts-module\">\n      <div className=\"fira\">\n        Fira Code\n      </div>\n      <div className=\"montserrat\">\n        Montserrat\n      </div>\n    </div>\n  );\n}\n\nexport function FontSizes() {\n  {\n    return (\n      <div className=\"module fontsize-module\">\n        <div className=\"texts\">\n          <p>This is normal text</p>\n        </div>\n        <div className=\"headings\">\n          <h1>Heading 1</h1>\n          <h2>Heading 2</h2>\n          <h3>Heading 3</h3>\n        </div>\n      </div>\n    );\n  }\n}\n","import { gruvboxDark } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { Fonts, FontSizes } from \"../modules/TypoModules\";\nimport CollapsibleCode from \"../modules/CollapsibleCode\";\n\nconst scssFontImport = `@import url(\"https://fonts.googleapis.com/css2?family=Fira+Code:wght@400;500;700&family=Montserrat:wght@700&display=swap\");`;\n\nconst fontSizes = `$size-text: 1rem; // Normal Text\n$size-heading-small: 1.25rem; // Heading 1\n$size-heading: 1.5rem; // Heading 2\n$size-heading-big: 2rem; // Heading 3\n`;\n\nexport default function Typography() {\n  return (\n    <div className=\"page\">\n      <section>\n        <h1>TYPOGRAPHY</h1>\n        <p>\n          We're aiming at developers. Having a monospace font, besides a regular\n          sans-serif, should make our target group more comfortable to use the\n          app.\n        </p>\n      </section>\n      <section>\n        <h2>Fonts</h2>\n        <Fonts />\n        <h3>SCSS</h3>\n        <CollapsibleCode code={scssFontImport} language=\"scss\" />\n      </section>\n      <section>\n        <h2>Font Sizes</h2>\n        <FontSizes />\n        <h3>SCSS</h3>\n        <CollapsibleCode code={fontSizes} language=\"scss\" />\n      </section>\n    </div>\n  );\n}\n","import \"../../styles/modules/FormModule.scss\"\n\nexport function LoginForm() {\n    return (\n        <div className=\"module form-module\">\n          <form className=\"devise-form\">\n            <h2>Log in</h2>\n            <div className=\"field\">\n              <label for=\"user_email\">Email</label><br />\n              <input autofocus=\"autofocus\" autocomplete=\"email\" type=\"email\" name=\"user_email\" />\n            </div>\n            <div className=\"field\">\n              <label for=\"user_password\">Password</label><br />\n              <input autocomplete=\"current-password\" type=\"password\" name=\"user_password\" id=\"user_password\" />\n            </div>\n            <div className=\"field\">\n              <label for=\"user_remember_me\">Remember me</label>\n              <input type=\"checkbox\" value=\"1\" name=\"user_remember_me\" id=\"user_remember_me\" />\n            </div>\n            <div className=\"actions\">\n              <input onClick={(e) => e.preventDefault()} type=\"submit\" name=\"commit\" value=\"Log in\" className=\"submit\" />\n              <a onClick={(e) => e.preventDefault()} href=\"/users/sign_up\">Sign up</a><br />\n              <a onClick={(e) => e.preventDefault()} href=\"/users/password/new\">Forgot your password?</a><br />\n            </div>\n          </form>\n        </div>\n    );\n}\n\nexport function ContentForm() {\n    return (\n        <div className=\"module content-form-module\">\n          <form className=\"content-form\" enctype=\"multipart/form-data\" action=\"/posts\" accept-charset=\"UTF-8\" method=\"post\">\n            <div className=\"field_title\">\n              <label for=\"post_title\">Title</label>\n              <input type=\"text\" name=\"post_title\" id=\"post_title\" />\n            </div>\n            <div className=\"field_content_text\">\n              <label for=\"post_content_text\">Content:</label>\n              <textarea className=\"post-textarea\" name=\"post_content_text\" id=\"post_content_text\"></textarea>\n            </div>\n            <div className=\"content\">\n              <div className=\"field_content_image\">\n                <label for=\"post_content_image\">Image:</label>\n                <input multiple=\"multiple\" type=\"file\" name=\"post_content_image\" id=\"post_content_image\"/>\n              </div>\n              <div className=\"field_content_file\">\n                <label for=\"post_content_file\">File:</label>\n                <input type=\"file\" name=\"post_content_file\" id=\"post_content_file\"/>\n              </div>\n            </div>\n            <div className=\"field_content_tags\">\n              <label for=\"post_tag_list\">Tags</label>\n              <input type=\"text\" name=\"post_tag_list\" id=\"post_tag_list\" />\n            </div>\n            <div className=\"actions\">\n              <input onClick={(e) => e.preventDefault()} type=\"submit\" name=\"commit\" value=\"Create Post\" className=\"submit small\" />\n            </div>\n          </form>\n        </div>\n    );\n}\n","import SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { gruvboxDark } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { LoginForm, ContentForm } from \"../modules/FormModules\";\nimport Collapsible from \"react-collapsible\";\nimport CollapsibleCode from \"../modules/CollapsibleCode\";\n\nexport default function Forms() {\n  const submitFormHTML = `<form className=\"devise-form\">\n    <h2>Log in</h2>\n    <div className=\"field\">\n        <label for=\"user_email\">Email</label><br />\n        <input autofocus=\"autofocus\" autocomplete=\"email\" type=\"email\" value=\"\" name=\"user_email\" />\n    </div>\n\n    <div className=\"field\">\n        <label for=\"user_password\">Password</label><br />\n        <input autocomplete=\"current-password\" type=\"password\" name=\"user_password\" id=\"user_password\" />\n    </div>\n\n    <div className=\"field\">\n        <label for=\"user_remember_me\">Remember me</label>\n        <input type=\"checkbox\" value=\"1\" name=\"user_remember_me\" id=\"user_remember_me\" />\n    </div>\n\n    <div className=\"actions\">\n        <input type=\"submit\" name=\"commit\" value=\"Log in\" className=\"submit\" />\n        <a href=\"/users/sign_up\">Sign up</a><br />\n        <a href=\"/users/password/new\">Forgot your password?</a><br />\n    </div>\n</form>`\n\n  const submitFormSCSS = `.devise-form {\n  display: grid;\n  border-radius: 10px;\n  grid-gap: 15px;\n  height: auto;\n  width: auto;\n  min-width: 30%;\n  margin: auto;\n  color: $background-sexy;\n  background-color: $secondary;\n  padding: 20px 10px;\n\n  h2 {\n    text-align: center;\n    font-size: 2rem;\n    min-width: 80%;\n    margin-left: auto;\n    margin-right: auto;\n    border-bottom: 3px solid black;\n  }\n\n  .field {\n    justify-self: center;\n    width: 70%;\n\n    label {\n      font-family: $heading;\n      font-size: 1.2rem;\n    }\n    input {\n      outline: none;\n      border: 2px solid black;\n      border-radius: 5px;\n      font-family: \"Fira Code\";\n      font-family: $text;\n      letter-spacing: 3px;\n      font-weight: bold;\n      font-size: 1.2rem;\n      width: 100%;\n      padding: 10px;\n    }\n\n    input[type=\"checkbox\"] {\n      width: auto;\n      margin-left: 30px;\n    }\n  }\n  .actions {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-direction: column;\n\n    a {\n      color: $highlight;\n      color: black;\n      font-size: 1.2rem;\n      font-family: $heading;\n      margin-top: 10px;\n    }\n\n    p {\n      font-size: $size-heading-small;\n      margin-top: 10px;\n    }\n  }\n}\n`\n\n  const contentFormHTML = `<form className=\"content-form\" enctype=\"multipart/form-data\" action=\"/posts\" accept-charset=\"UTF-8\" method=\"post\">\n    <div className=\"field_title\">\n      <label for=\"post_title\">Title</label>\n      <input type=\"text\" name=\"post_title\" id=\"post_title\" />\n    </div>\n    <div className=\"field_content_text\">\n      <label for=\"post_content_text\">Content:</label>\n      <textarea className=\"post-textarea\" name=\"post_content_text\" id=\"post_content_text\"></textarea>\n    </div>\n    <div className=\"content\">\n      <div className=\"field_content_image\">\n        <label for=\"post_content_image\">Image:</label>\n        <input multiple=\"multiple\" type=\"file\" name=\"post_content_image\" id=\"post_content_image\"/>\n      </div>\n      <div className=\"field_content_file\">\n        <label for=\"post_content_file\">File:</label>\n        <input type=\"file\" name=\"post_content_file\" id=\"post_content_file\"/>\n      </div>\n    </div>\n    <div className=\"field_content_tags\">\n      <label for=\"post_tag_list\">Tags</label>\n      <input type=\"text\" name=\"post_tag_list\" id=\"post_tag_list\" />\n    </div>\n    <div className=\"actions\">\n      <input type=\"submit\" name=\"commit\" value=\"Create Post\" className=\"submit small\" />\n    </div>\n  </form>`\n\n  const contentFormSCSS = `.content-form {\n  width: auto;\n  max-width: 100%;\n  height: 100%;\n  display: grid;\n  padding: 2rem 0;\n  grid-template-columns: 35% 32.5% 32.5%;\n  grid-template-rows: 20% 40% 15% 10%;\n  grid-row-gap: 5%;\n  grid-template-areas:\n    \"post-title post-file post-file\"\n    \"post-content-text post-content-text post-content-text\"\n    \"post-tags post-tags post-tags\"\n    \"post-submit post-submit post-submit\";\n\n  label {\n    color: $background-sexy;\n    font-size: 1.3rem;\n  }\n  .field_title {\n    align-self: center;\n    display: flex;\n    flex-flow: column nowrap;\n    justify-self: left;\n    grid-area: post-title;\n    height: 100%;\n    width: 75%;\n    justify-content: center;\n\n    #post_title {\n      background-color: $background-light;\n      border: solid 0.25rem $background-light;\n      border-radius: 0.25rem;\n      height: 35%;\n      width: 100%;\n      margin-top: 0.25rem;\n      filter: drop-shadow(0 0.25rem 0.25em $background-sexy);\n    }\n  }\n  .field_content_text {\n    grid-area: post-content-text;\n    display: flex;\n    flex-flow: column nowrap;\n    height: 100%;\n    width: 100%;\n    justify-content: center;\n\n    #post_content_text {\n      background-color: $background-light;\n      border: solid 0.25rem $background-light;\n      border-radius: 0.25rem;\n      height: 75%;\n      width: 100%;\n      margin-top: 0.25rem;\n      filter: drop-shadow(0 0.25rem 0.25rem $background-sexy);\n    }\n  }\n  .field_content_tags {\n    grid-area: post-tags;\n    display: flex;\n    flex-flow: column nowrap;\n    height: 100%;\n    width: 100%;\n    justify-content: center;\n    #post_tag_list {\n      background-color: $background-light;\n      border: solid 0.25rem $background-light;\n      border-radius: 0.25rem;\n      height: 75%;\n      width: 100%;\n      margin-top: 0.25rem;\n      filter: drop-shadow(0 0.25rem 0.25rem $background-sexy);\n    }\n  }\n  .content {\n    grid-area: post-file;\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: end;\n\n    label {\n      padding-right: 1rem;\n      @include mobile {\n        padding-right: 0.5rem;\n        margin-left: 0;\n        font-size: 90%;\n        align-self: center;\n      }\n    }\n    .field_content_image {\n      @include tablet {\n        overflow: hidden;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n        margin-left: 3rem;\n      }\n      @include mobile {\n        overflow: hidden;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n        margin-left: 0;\n      }\n      display: flex;\n      justify-content: center;\n      input {\n        cursor: pointer;\n        margin-top: 0.25rem;\n        filter: drop-shadow(0 0.25rem 0.25rem $background-sexy);\n      }\n    }\n    .field_content_file {\n      @include tablet {\n        overflow: hidden;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n        margin-left: 3.75rem;\n      }\n      @include mobile {\n        overflow: hidden;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n        margin-left: 0.75rem;\n      }\n      display: flex;\n      justify-content: center;\n\n      input {\n        cursor: pointer;\n        margin-top: 0.25rem;\n        filter: drop-shadow(0 0.25rem 0.25rem $background-sexy);\n      }\n    }\n  }\n\n  .actions {\n    grid-area: post-submit;\n    margin: auto;\n  }\n}`\n\n  return (\n    <div className=\"page\">\n      <section>\n        <h1>FORMS</h1>\n        <p>Especially when creating a CRUD Application, forms are the bread and butter in user interaction.\n        It is important to not overcomplicate the visual style, however the form shoud be styled enough to be inviting to use.\n        </p>\n      </section>\n      <section>\n        <h2>User Forms</h2>\n        <p>These forms are used for everything user-related. Login/Registration Forms, as well as User-Edit Forms should look like the following example. </p>\n        <LoginForm />\n        <h3>HTML</h3>\n        <CollapsibleCode code={submitFormHTML} language=\"erb\" />\n        <h3>SCSS</h3>\n        <CollapsibleCode code={submitFormSCSS} language=\"scss\" />\n      </section>\n      <section>\n        <h2>Content Forms</h2>\n        <p>These forms are used when content is being added.</p>\n        <ContentForm />\n        <h3>HTML</h3>\n        <CollapsibleCode code={contentFormHTML} language=\"erb\" />\n        <h3>SCSS</h3>\n        <CollapsibleCode code={contentFormSCSS} language=\"scss\" />\n      </section>\n    </div >\n  );\n}\n","import CollapsibleCode from \"../modules/CollapsibleCode\";\n\n\nexport default function Methodology() {\n\n    const scssReset = `\n/* Box sizing rules */\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n/* Remove default margin */\nbody,\nh1,\nh2,\nh3,\nh4,\np,\nfigure,\nblockquote,\ndl,\ndd {\n  margin: 0;\n}\n\n/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */\nul[role=\"list\"],\nol[role=\"list\"] {\n  list-style: none;\n}\n\nul,\nol {\n  padding: 0;\n}\n\n/* Set core root defaults */\nhtml:focus-within {\n  scroll-behavior: smooth;\n}\n\n/* Set core body defaults */\nbody {\n  height: 100vh;\n  text-rendering: optimizeSpeed;\n  line-height: 1.5;\n}\n\n/* A elements that don't have a class get default styles */\na:not([class]) {\n  text-decoration-skip-ink: auto;\n}\n\n/* Make images easier to work with */\nimg,\npicture {\n  max-width: 100%;\n  display: block;\n}\n\n/* Inherit fonts for inputs and buttons */\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n\n/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */\n@media (prefers-reduced-motion: reduce) {\n  html:focus-within {\n    scroll-behavior: auto;\n  }\n\n  *,\n  *::before,\n  *::after {\n    animation-duration: 0.01ms !important;\n    animation-iteration-count: 1 !important;\n    transition-duration: 0.01ms !important;\n    scroll-behavior: auto !important;\n  }\n}\n`\n\n    const scssFileStructure = `\n├── main.scss\n├── reset.css\n├── _button.scss\n├── _conversation.scss\n├── _fonts.scss\n├── _form.scss\n├── _header.scss\n├── _helper.scss\n├── _keyframes.scss\n├── _mixin.scss\n├── _nav.scss\n├── _posts.scss\n├── _users.scss\n└── _variables.scss\n\n`\n    return (\n        <div className=\"page\">\n            <section>\n                <h1>METHODOLOGY</h1>\n                <p>\n                    This page describes our code conventions and CSS environment.\n                </p>\n            </section>\n            <section>\n                <h2>Framework</h2>\n                <p>\n                    We are using SCSS in all stylesheets, following a main-partials system.\n                    The main entrypoint should be named main.scss and all partials should be imported there.\n                    Partials are named and categorized thematically.\n                </p>\n                <p>\n                    Here is an example how the file structure could look like using Ruby on Rails.\n                    Note, that <code>reset.css</code> is not a partial here and gets loaded before everything else in the asset pipeline used by rails.\n                </p>\n                <h3>File structure</h3>\n                <CollapsibleCode code={scssFileStructure} language=\"bash\" />\n            </section>\n            <section>\n                <h2>RESET.CSS</h2>\n                <p>\n                    We are using the following opinionated, modern reset:\n                </p>\n                <h3>SCSS</h3>\n                <CollapsibleCode code={scssReset} language=\"scss\" />\n            </section>\n            <section>\n                <h2>Naming Conventions</h2>\n                <p>\n                    We heavily use nesting in our SCSS code and as such, do not set strict guidelines\n                    on how classes should be named. Where it is necessary, class names should contain words that make\n                    the class classifiable to a html component when reading it.\n                </p>\n            </section>\n            <section>\n                <h2>Units</h2>\n                <p>\n                    <code>rem</code> for font sizes, <code>vh/vw</code> for top-level layouts, <code>%</code> for mid-level components and <code>px</code> for borders and other small modules.\n                </p>\n            </section>\n            <section>\n                <h2>Indentation</h2>\n                <p>\n                    We are using 2 spaces for indentation and <code>scss-stylelint</code> as a linter.\n                </p>\n            </section>\n        </div>\n    );\n}\n","import \"../../styles/modules/ButtonModule.scss\"\nimport { useState } from \"react\";\n\nexport function SubmitButton() {\n    const disableEvent = (event) => {\n        event.preventDefault()\n    }\n    return (\n        <div className=\"module submit-module\">\n            <button onClick={event => disableEvent(event)} href=\"\" className=\"submit small\">Submit</button>\n        </div >\n    );\n}\n\nexport function TagButton() {\n    {\n        const [button1, setButton1] = useState(true)\n        const [button2, setButton2] = useState(false)\n\n        return (\n            <div className=\"module tag-module\">\n                <a onClick={() => setButton1(!button1)} className={button1 ? \"tag\" : \"tag owned\"}>React</a>\n                <a onClick={() => setButton2(!button2)} className={button2 ? \"tag\" : \"tag owned\"}>Rails</a>\n            </div>\n        );\n    }\n}\n","import { SubmitButton, TagButton } from \"../modules/ButtonModules\";\nimport CollapsibleCode from \"../modules/CollapsibleCode\";\n\nexport default function Buttons() {\n  const submitButtonHTML = `<input type=\"submit\" class=\"submit small\">`\n  const tagButtonHTML = `<a href=\"#\" class=\"tag\"></a>\"`\n\n  const submitButtonSCSS = `.submit {\n    cursor: pointer;\n    filter: drop-shadow(0 0.15rem 0.25rem $background-sexy);\n    text-transform: uppercase;\n    padding: 0.5rem 2rem;\n    background-color: $highlight;\n    border: solid 0.15rem $background-sexy;\n    border-radius: 0.25rem;\n    font-family: $heading;\n    font-size: $size-heading;\n    transition: transform 0.5s ease-in-out;\n\n    &.small {\n        font-size: $size-heading-small;\n        padding: 0.3rem 1.5rem;\n    }\n\n    &.extra-small {\n        font-size: $size-heading-small;\n        padding: 0.1rem 1.3rem;\n    }\n\n    &:focus {\n        border: solid 0.25rem $highlight;\n        background-color: $background-sexy;\n        color: white;\n        filter: drop-shadow(0 0.15rem 0.25rem $highlight);\n    }\n    &:hover {\n        transform: scale(1.07);\n    }\n    }`\n\n  const tagButtonSCSS = `.tag {\n  cursor: pointer;\n  font-family: $heading;\n  padding: 0.3rem 1.5rem;\n  border: solid 2px $background-sexy;\n  border-radius: 0.25rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0.5rem;\n  background-color: $background-light;\n  filter: drop-shadow(0 0.2rem 0.15rem $background-sexy);\n  text-decoration: none;\n  color: black;\n  transition: ease-in-out 0.25s;\n  font-size: 1.3rem;\n  p {\n    text-align: center;\n  }\n\n  &:hover {\n    border-color: $highlight;\n    filter: drop-shadow(0 0.2rem 0.15rem $highlight);\n    background-color: $background-sexy;\n    color: white;\n\n    img {\n      filter: invert(1);\n    }\n\n    transform: scale(1.1);\n  }\n}\n.owned {\n  background-color: $highlight;\n  transition: none;\n  &:hover {\n    border: solid 2px $background-sexy;\n    background-color: $highlight;\n    color: $background-sexy;\n    filter: drop-shadow(0 0.2rem 0.15rem $background-sexy);\n  }\n}\n\n`\n\n  return (\n    <div className=\"page\">\n      <section>\n        <h1>BUTTONS</h1>\n        <p>We differiante two types of buttons: Submit-Buttons and Tag-Buttons</p>\n      </section>\n      <section>\n        <h2>Submit Button</h2>\n        <p>This should be used in all forms.\n        It means that an action will follow the click,\n                possibly with a redirect or page reload</p>\n        <SubmitButton />\n        <h3>HTML</h3>\n        <CollapsibleCode code={submitButtonHTML} language=\"erb\" />\n        <h3>SCSS</h3>\n        <CollapsibleCode code={submitButtonSCSS} language=\"scss\" />\n      </section>\n      <section>\n        <h2>Tag Button</h2>\n        <p>This button can be toggled between two states.</p>\n        <TagButton />\n        <h3>HTML</h3>\n        <CollapsibleCode code={tagButtonHTML} language=\"erb\" />\n        <h3>SCSS</h3>\n        <CollapsibleCode code={tagButtonSCSS} language=\"scss\" />\n      </section>\n    </div>\n  );\n}\n","import './styles/App.scss';\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink\n} from \"react-router-dom\";\n\n// import the pages\nimport Introduction from \"./components/pages/Introduction\";\nimport Colors from \"./components/pages/Colors\";\nimport Typography from \"./components/pages/Typography\";\nimport Forms from \"./components/pages/Forms\";\nimport Methodology from \"./components/pages/Methodology\";\nimport Buttons from \"./components/pages/Buttons\";\n\nexport default function App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      {/* Left Navigation */}\n      <nav className=\"nav-wrapper\">\n        <div className=\"title\"> <h1>\n          CodeBunker\n        </h1>\n          <p>STYLE GUIDE</p>\n        </div>\n        <ul className=\"styleguide-nav\">\n          <li>\n            <NavLink exact={true} to=\"/\" activeClassName=\"is-active-link\">Introduction</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/methodology\" activeClassName=\"is-active-link\">Methodology</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/colors\" activeClassName=\"is-active-link\">Colors</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/typography\" activeClassName=\"is-active-link\">Typography</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/buttons\" activeClassName=\"is-active-link\">Buttons</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/forms\" activeClassName=\"is-active-link\">Forms</NavLink>\n          </li>\n        </ul>\n        <div className=\"authors\">\n          <span>Felix Macho</span>\n          <span>Simon Sölder</span>\n\n        </div>\n      </nav>\n\n      {/* Switch */}\n      <Switch>\n        <Route exact path=\"/\">\n          <Introduction />\n        </Route>\n        <Route path=\"/methodology\">\n          <Methodology />\n        </Route>\n        <Route path=\"/colors\">\n          <Colors />\n        </Route>\n        <Route path=\"/typography\">\n          <Typography />\n        </Route>\n        <Route path=\"/buttons\">\n          <Buttons />\n        </Route>\n        <Route path=\"/forms\">\n          <Forms />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}