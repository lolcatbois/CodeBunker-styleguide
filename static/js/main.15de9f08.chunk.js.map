{"version":3,"sources":["components/pages/Introduction.jsx","components/modules/ColorModules.jsx","components/modules/CollapsibleCode.jsx","components/pages/Colors.jsx","components/modules/TypoModules.jsx","components/pages/Typography.jsx","components/modules/FormModules.jsx","components/pages/Forms.jsx","components/modules/ButtonModules.jsx","components/pages/Buttons.jsx","App.js","reportWebVitals.js","index.js"],"names":["Introduction","className","ColorModule","CollapsibleCode","props","trigger","triggerWhenOpen","showLineNumber","style","gruvboxDark","language","code","Colors","Fonts","FontSizes","Typography","LoginForm","for","autofocus","autocomplete","type","name","id","value","onClick","e","preventDefault","href","ContentForm","enctype","action","accept-charset","method","multiple","Forms","SubmitButton","event","disableEvent","TagButton","useState","button1","setButton1","button2","setButton2","Buttons","App","exact","to","activeClassName","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15de9f08.chunk.js","sourcesContent":["import SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\nexport default function Introduction() {\n    return (\n        <div className=\"page\">\n\n            <section>\n                <h1>INTRODUCTION</h1>\n                <h2>Introduction</h2>\n                <p>\n                    This is a paragraph. This is a paragraph. This is a paragraph.\n                    This is a paragraph. This is a paragraph.\n            </p>\n            </section>\n\n            <section>\n                <h1>Introduction</h1>\n                <h2>Introduction</h2>\n                <p>\n                    This is a paragraph. This is a paragraph. This is a paragraph. This is a\n                    paragraph. This is a paragraph.\n                </p>\n            </section>\n        </div>\n    );\n}\n","import \"../../styles/modules/ColorModule.scss\";\n\nexport function ColorModule() {\n  return (\n    <div className=\"module color-module\">\n      <div className=\"color1\">\n        #282828\n        <span>background-sexy</span>\n      </div>\n      <div className=\"color2\">\n        #C4C4C4\n        <span>background-light</span>\n      </div>\n      <div className=\"color3\">\n        #E6C973\n        <span>highlight</span>\n      </div>\n      <div className=\"color4\">\n        #91A18D\n        <span>accent</span>\n      </div>\n      <div className=\"color5\">\n        #91A18D\n        <span>background-dark</span>\n      </div>\n    </div>\n  );\n}\n","import SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { gruvboxDark } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport Collapsible from \"react-collapsible\";\n\nexport default function CollapsibleCode(props) {\n\n    return (\n        <Collapsible trigger=\"> SHOW\" triggerWhenOpen=\"< CLOSE\">\n            <SyntaxHighlighter showLineNumber style={gruvboxDark} language={props.language}>\n                {props.code}\n            </SyntaxHighlighter>\n        </Collapsible>\n    );\n\n}\n","import { ColorModule } from \"../modules/ColorModules\";\nimport CollapsibleCode from \"../modules/CollapsibleCode\";\n\nconst scssColors = `$accent: #91a18d;\n$highlight: #e6c973;\n$background-light: #c4c4c4;\n$background-dark: #9b9b9b;\n$background-sexy: #282828;\n`\n\nexport default function Colors() {\n    return (\n        <div className=\"page\">\n            <section>\n                <h1>COLORS</h1>\n                <p>\n                    We mainly focus on various shades of gray (less than 50),\n                    with a dark background. a highlight color and an accent color.\n                </p>\n            </section>\n\n            <section>\n                <h2>Color Scheme</h2>\n                <ColorModule />\n                <h3>SCSS Code</h3>\n                <CollapsibleCode code={scssColors} language=\"scss\" />\n            </section>\n        </div>\n    );\n}\n","import \"../../styles/modules/TypoModule.scss\"\n\nexport function Fonts() {\n  return (\n    <div className=\"module fonts-module\">\n      <div className=\"fira\">\n        Fira Code\n      </div>\n      <div className=\"montserrat\">\n        Montserrat\n      </div>\n    </div>\n  );\n}\n\nexport function FontSizes() {\n  {\n    return (\n      <div className=\"module fontsize-module\">\n        <div className=\"texts\">\n          <p>This is normal text</p>\n        </div>\n        <div className=\"headings\">\n          <h1>Heading 1</h1>\n          <h2>Heading 2</h2>\n          <h3>Heading 3</h3>\n        </div>\n      </div>\n    );\n  }\n}\n","import SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { gruvboxDark } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { Fonts, FontSizes } from \"../modules/TypoModules\";\nimport Collapsible from \"react-collapsible\";\n\nconst scssFontImport = `@import url(\"https://fonts.googleapis.com/css2?family=Fira+Code:wght@400;500;700&family=Montserrat:wght@700&display=swap\");`;\n\nconst fontSizes = `$size-text: 1rem; // Normal Text\n$size-heading-small: 1.25rem; // Heading 1\n$size-heading: 1.5rem; // Heading 2\n$size-heading-big: 2rem; // Heading 3\n`;\n\nexport default function Typography() {\n  return (\n    <div className=\"page\">\n      <section>\n        <h1>TYPOGRAPHY</h1>\n        <p>\n          We're aiming at developers. Having a monospace font, besides a regular\n          sans-serif, should make our target group more comfortable to use the\n          app.\n        </p>\n      </section>\n      <section>\n        <h2>Fonts</h2>\n        <Fonts />\n        <h3>SCSS</h3>\n        <Collapsible trigger=\"> SHOW\" triggerWhenOpen=\"< CLOSE\">\n          <SyntaxHighlighter showLineNumber style={gruvboxDark} language=\"scss\">\n            {scssFontImport}\n          </SyntaxHighlighter>\n        </Collapsible>\n      </section>\n      <section>\n        <h2>Font Sizes</h2>\n        <FontSizes />\n        <h3>SCSS</h3>\n        <Collapsible trigger=\"> SHOW\" triggerWhenOpen=\"< CLOSE\">\n          <SyntaxHighlighter showLineNumber style={gruvboxDark} language=\"scss\">\n            {fontSizes}\n          </SyntaxHighlighter>\n        </Collapsible>\n      </section>\n    </div>\n  );\n}\n","import \"../../styles/modules/FormModule.scss\"\n\nexport function LoginForm() {\n    return (\n        <div className=\"module form-module\">\n          <form className=\"devise-form\">\n            <h2>Log in</h2>\n            <div className=\"field\">\n              <label for=\"user_email\">Email</label><br />\n              <input autofocus=\"autofocus\" autocomplete=\"email\" type=\"email\" name=\"user_email\" />\n            </div>\n            <div className=\"field\">\n              <label for=\"user_password\">Password</label><br />\n              <input autocomplete=\"current-password\" type=\"password\" name=\"user_password\" id=\"user_password\" />\n            </div>\n            <div className=\"field\">\n              <label for=\"user_remember_me\">Remember me</label>\n              <input type=\"checkbox\" value=\"1\" name=\"user_remember_me\" id=\"user_remember_me\" />\n            </div>\n            <div className=\"actions\">\n              <input onClick={(e) => e.preventDefault()} type=\"submit\" name=\"commit\" value=\"Log in\" className=\"submit\" />\n              <a onClick={(e) => e.preventDefault()} href=\"/users/sign_up\">Sign up</a><br />\n              <a onClick={(e) => e.preventDefault()} href=\"/users/password/new\">Forgot your password?</a><br />\n            </div>\n          </form>\n        </div>\n    );\n}\n\nexport function ContentForm() {\n    return (\n        <div className=\"module content-form-module\">\n          <form className=\"content-form\" enctype=\"multipart/form-data\" action=\"/posts\" accept-charset=\"UTF-8\" method=\"post\">\n            <div className=\"field_title\">\n              <label for=\"post_title\">Title</label>\n              <input type=\"text\" name=\"post_title\" id=\"post_title\" />\n            </div>\n            <div className=\"field_content_text\">\n              <label for=\"post_content_text\">Content:</label>\n              <textarea className=\"post-textarea\" name=\"post_content_text\" id=\"post_content_text\"></textarea>\n            </div>\n            <div className=\"content\">\n              <div className=\"field_content_image\">\n                <label for=\"post_content_image\">Image:</label>\n                <input multiple=\"multiple\" type=\"file\" name=\"post_content_image\" id=\"post_content_image\"/>\n              </div>\n              <div className=\"field_content_file\">\n                <label for=\"post_content_file\">File:</label>\n                <input type=\"file\" name=\"post_content_file\" id=\"post_content_file\"/>\n              </div>\n            </div>\n            <div className=\"field_content_tags\">\n              <label for=\"post_tag_list\">Tags</label>\n              <input type=\"text\" name=\"post_tag_list\" id=\"post_tag_list\" />\n            </div>\n            <div className=\"actions\">\n              <input onClick={(e) => e.preventDefault()} type=\"submit\" name=\"commit\" value=\"Create Post\" className=\"submit small\" />\n            </div>\n          </form>\n        </div>\n    );\n}\n","import SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { gruvboxDark } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { LoginForm, ContentForm } from \"../modules/FormModules\";\nimport Collapsible from \"react-collapsible\";\nimport CollapsibleCode from \"../modules/CollapsibleCode\";\n\nexport default function Forms() {\n  const submitFormHTML = `<form className=\"devise-form\">\n    <h2>Log in</h2>\n    <div className=\"field\">\n        <label for=\"user_email\">Email</label><br />\n        <input autofocus=\"autofocus\" autocomplete=\"email\" type=\"email\" value=\"\" name=\"user_email\" />\n    </div>\n\n    <div className=\"field\">\n        <label for=\"user_password\">Password</label><br />\n        <input autocomplete=\"current-password\" type=\"password\" name=\"user_password\" id=\"user_password\" />\n    </div>\n\n    <div className=\"field\">\n        <label for=\"user_remember_me\">Remember me</label>\n        <input type=\"checkbox\" value=\"1\" name=\"user_remember_me\" id=\"user_remember_me\" />\n    </div>\n\n    <div className=\"actions\">\n        <input type=\"submit\" name=\"commit\" value=\"Log in\" className=\"submit\" />\n        <a href=\"/users/sign_up\">Sign up</a><br />\n        <a href=\"/users/password/new\">Forgot your password?</a><br />\n    </div>\n</form>`\n\n  const submitFormSCSS = `.devise-form {\n  display: grid;\n  border-radius: 10px;\n  grid-gap: 15px;\n  height: auto;\n  width: auto;\n  min-width: 30%;\n  margin: auto;\n  color: $background-sexy;\n  background-color: $secondary;\n  padding: 20px 10px;\n\n  h2 {\n    text-align: center;\n    font-size: 2rem;\n    min-width: 80%;\n    margin-left: auto;\n    margin-right: auto;\n    border-bottom: 3px solid black;\n  }\n\n  .field {\n    justify-self: center;\n    width: 70%;\n\n    label {\n      font-family: $heading;\n      font-size: 1.2rem;\n    }\n    input {\n      outline: none;\n      border: 2px solid black;\n      border-radius: 5px;\n      font-family: \"Fira Code\";\n      font-family: $text;\n      letter-spacing: 3px;\n      font-weight: bold;\n      font-size: 1.2rem;\n      width: 100%;\n      padding: 10px;\n    }\n\n    input[type=\"checkbox\"] {\n      width: auto;\n      margin-left: 30px;\n    }\n  }\n  .actions {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-direction: column;\n\n    a {\n      color: $highlight;\n      color: black;\n      font-size: 1.2rem;\n      font-family: $heading;\n      margin-top: 10px;\n    }\n\n    p {\n      font-size: $size-heading-small;\n      margin-top: 10px;\n    }\n  }\n}\n`\n\n  const contentFormHTML = `<form className=\"content-form\" enctype=\"multipart/form-data\" action=\"/posts\" accept-charset=\"UTF-8\" method=\"post\">\n    <div className=\"field_title\">\n      <label for=\"post_title\">Title</label>\n      <input type=\"text\" name=\"post_title\" id=\"post_title\" />\n    </div>\n    <div className=\"field_content_text\">\n      <label for=\"post_content_text\">Content:</label>\n      <textarea className=\"post-textarea\" name=\"post_content_text\" id=\"post_content_text\"></textarea>\n    </div>\n    <div className=\"content\">\n      <div className=\"field_content_image\">\n        <label for=\"post_content_image\">Image:</label>\n        <input multiple=\"multiple\" type=\"file\" name=\"post_content_image\" id=\"post_content_image\"/>\n      </div>\n      <div className=\"field_content_file\">\n        <label for=\"post_content_file\">File:</label>\n        <input type=\"file\" name=\"post_content_file\" id=\"post_content_file\"/>\n      </div>\n    </div>\n    <div className=\"field_content_tags\">\n      <label for=\"post_tag_list\">Tags</label>\n      <input type=\"text\" name=\"post_tag_list\" id=\"post_tag_list\" />\n    </div>\n    <div className=\"actions\">\n      <input onClick={(e) => e.preventDefault()} type=\"submit\" name=\"commit\" value=\"Create Post\" className=\"submit small\" />\n    </div>\n  </form>`\n\n  const contentFormSCSS = `.content-form {\n  width: auto;\n  max-width: 100%;\n  height: 100%;\n  display: grid;\n  padding: 2rem 0;\n  grid-template-columns: 35% 32.5% 32.5%;\n  grid-template-rows: 20% 40% 15% 10%;\n  grid-row-gap: 5%;\n  grid-template-areas:\n    \"post-title post-file post-file\"\n    \"post-content-text post-content-text post-content-text\"\n    \"post-tags post-tags post-tags\"\n    \"post-submit post-submit post-submit\";\n\n  label {\n    color: $background-sexy;\n    font-size: 1.3rem;\n  }\n  .field_title {\n    align-self: center;\n    display: flex;\n    flex-flow: column nowrap;\n    justify-self: left;\n    grid-area: post-title;\n    height: 100%;\n    width: 75%;\n    justify-content: center;\n\n    #post_title {\n      background-color: $background-light;\n      border: solid 0.25rem $background-light;\n      border-radius: 0.25rem;\n      height: 35%;\n      width: 100%;\n      margin-top: 0.25rem;\n      filter: drop-shadow(0 0.25rem 0.25em $background-sexy);\n    }\n  }\n  .field_content_text {\n    grid-area: post-content-text;\n    display: flex;\n    flex-flow: column nowrap;\n    height: 100%;\n    width: 100%;\n    justify-content: center;\n\n    #post_content_text {\n      background-color: $background-light;\n      border: solid 0.25rem $background-light;\n      border-radius: 0.25rem;\n      height: 75%;\n      width: 100%;\n      margin-top: 0.25rem;\n      filter: drop-shadow(0 0.25rem 0.25rem $background-sexy);\n    }\n  }\n  .field_content_tags {\n    grid-area: post-tags;\n    display: flex;\n    flex-flow: column nowrap;\n    height: 100%;\n    width: 100%;\n    justify-content: center;\n    #post_tag_list {\n      background-color: $background-light;\n      border: solid 0.25rem $background-light;\n      border-radius: 0.25rem;\n      height: 75%;\n      width: 100%;\n      margin-top: 0.25rem;\n      filter: drop-shadow(0 0.25rem 0.25rem $background-sexy);\n    }\n  }\n  .content {\n    grid-area: post-file;\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: end;\n\n    label {\n      padding-right: 1rem;\n      @include mobile {\n        padding-right: 0.5rem;\n        margin-left: 0;\n        font-size: 90%;\n        align-self: center;\n      }\n    }\n    .field_content_image {\n      @include tablet {\n        overflow: hidden;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n        margin-left: 3rem;\n      }\n      @include mobile {\n        overflow: hidden;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n        margin-left: 0;\n      }\n      display: flex;\n      justify-content: center;\n      input {\n        cursor: pointer;\n        margin-top: 0.25rem;\n        filter: drop-shadow(0 0.25rem 0.25rem $background-sexy);\n      }\n    }\n    .field_content_file {\n      @include tablet {\n        overflow: hidden;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n        margin-left: 3.75rem;\n      }\n      @include mobile {\n        overflow: hidden;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n        margin-left: 0.75rem;\n      }\n      display: flex;\n      justify-content: center;\n\n      input {\n        cursor: pointer;\n        margin-top: 0.25rem;\n        filter: drop-shadow(0 0.25rem 0.25rem $background-sexy);\n      }\n    }\n  }\n\n  .actions {\n    grid-area: post-submit;\n    margin: auto;\n  }\n}`\n\n  return (\n    <div className=\"page\">\n      <section>\n        <h1>FORMS</h1>\n        <p>Especially when creating a CRUD Application, forms are the bread and butter in user interaction.\n        It is important to not overcomplicate the visual style, however the form shoud be styled enough to be inviting to use.\n        </p>\n      </section>\n      <section>\n        <h2>User Forms</h2>\n        <p>These forms are used for everything user-related. Login/Registration Forms, as well as User-Edit Forms should look like the following example. </p>\n        <LoginForm />\n        <h3>HTML</h3>\n        <CollapsibleCode code={submitFormHTML} language=\"erb\" />\n        <h3>SCSS</h3>\n        <CollapsibleCode code={submitFormSCSS} language=\"scss\" />\n      </section>\n      <section>\n        <h2>Content Forms</h2>\n        <p>These forms are used when content is being added.</p>\n        <ContentForm />\n        <h3>HTML</h3>\n        <CollapsibleCode code={contentFormHTML} language=\"erb\" />\n        <h3>SCSS</h3>\n        <CollapsibleCode code={contentFormSCSS} language=\"scss\" />\n      </section>\n    </div >\n  );\n}\n","import \"../../styles/modules/ButtonModule.scss\"\nimport { useState } from \"react\";\n\nexport function SubmitButton() {\n    const disableEvent = (event) => {\n        event.preventDefault()\n    }\n    return (\n        <div className=\"module submit-module\">\n            <button onClick={event => disableEvent(event)} href=\"\" className=\"submit small\">Submit</button>\n        </div >\n    );\n}\n\nexport function TagButton() {\n    {\n        const [button1, setButton1] = useState(true)\n        const [button2, setButton2] = useState(false)\n\n        return (\n            <div className=\"module tag-module\">\n                <a onClick={() => setButton1(!button1)} className={button1 ? \"tag\" : \"tag owned\"}>React</a>\n                <a onClick={() => setButton2(!button2)} className={button2 ? \"tag\" : \"tag owned\"}>Rails</a>\n            </div>\n        );\n    }\n}\n","import { SubmitButton, TagButton } from \"../modules/ButtonModules\";\nimport CollapsibleCode from \"../modules/CollapsibleCode\";\n\nexport default function Buttons() {\n  const submitButtonHTML = `<input type=\"submit\" class=\"submit small\">`\n  const tagButtonHTML = `<a href=\"#\" class=\"tag\"></a>\"`\n\n  const submitButtonSCSS = `.submit {\n    cursor: pointer;\n    filter: drop-shadow(0 0.15rem 0.25rem $background-sexy);\n    text-transform: uppercase;\n    padding: 0.5rem 2rem;\n    background-color: $highlight;\n    border: solid 0.15rem $background-sexy;\n    border-radius: 0.25rem;\n    font-family: $heading;\n    font-size: $size-heading;\n    transition: transform 0.5s ease-in-out;\n\n    &.small {\n        font-size: $size-heading-small;\n        padding: 0.3rem 1.5rem;\n    }\n\n    &.extra-small {\n        font-size: $size-heading-small;\n        padding: 0.1rem 1.3rem;\n    }\n\n    &:focus {\n        border: solid 0.25rem $highlight;\n        background-color: $background-sexy;\n        color: white;\n        filter: drop-shadow(0 0.15rem 0.25rem $highlight);\n    }\n    &:hover {\n        transform: scale(1.07);\n    }\n    }`\n\n  const tagButtonSCSS = `.tag {\n  cursor: pointer;\n  font-family: $heading;\n  padding: 0.3rem 1.5rem;\n  border: solid 2px $background-sexy;\n  border-radius: 0.25rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0.5rem;\n  background-color: $background-light;\n  filter: drop-shadow(0 0.2rem 0.15rem $background-sexy);\n  text-decoration: none;\n  color: black;\n  transition: ease-in-out 0.25s;\n  font-size: 1.3rem;\n  p {\n    text-align: center;\n  }\n\n  &:hover {\n    border-color: $highlight;\n    filter: drop-shadow(0 0.2rem 0.15rem $highlight);\n    background-color: $background-sexy;\n    color: white;\n\n    img {\n      filter: invert(1);\n    }\n\n    transform: scale(1.1);\n  }\n}\n.owned {\n  background-color: $highlight;\n  transition: none;\n  &:hover {\n    border: solid 2px $background-sexy;\n    background-color: $highlight;\n    color: $background-sexy;\n    filter: drop-shadow(0 0.2rem 0.15rem $background-sexy);\n  }\n}\n\n`\n\n  return (\n    <div className=\"page\">\n      <section>\n        <h1>BUTTONS</h1>\n        <p>We differiante two types of buttons: Submit-Buttons and Tag-Buttons</p>\n      </section>\n      <section>\n        <h2>Submit Button</h2>\n        <p>This should be used in all forms.\n        It means that an action will follow the click,\n                possibly with a redirect or page reload</p>\n        <SubmitButton />\n        <h3>HTML</h3>\n        <CollapsibleCode code={submitButtonHTML} language=\"erb\" />\n        <h3>SCSS</h3>\n        <CollapsibleCode code={submitButtonSCSS} language=\"scss\" />\n      </section>\n      <section>\n        <h2>Tag Button</h2>\n        <p>This button can be toggled between two states.</p>\n        <TagButton />\n        <h3>HTML</h3>\n        <CollapsibleCode code={tagButtonHTML} language=\"erb\" />\n        <h3>SCSS</h3>\n        <CollapsibleCode code={tagButtonSCSS} language=\"scss\" />\n      </section>\n    </div>\n  );\n}\n","import './styles/App.scss';\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink\n} from \"react-router-dom\";\n\n// import the pages\nimport Introduction from \"./components/pages/Introduction\";\nimport Colors from \"./components/pages/Colors\";\nimport Typography from \"./components/pages/Typography\";\nimport Forms from \"./components/pages/Forms\";\nimport Buttons from \"./components/pages/Buttons\";\n\n\nexport default function App() {\n  return (\n    <Router>\n      {/* Left Navigation */}\n      <nav className=\"nav-wrapper\">\n        <div className=\"title\"> <h1>\n          CodeBunker\n        </h1>\n          <p>\n            Style Guide\n        </p>\n        </div>\n        <ul className=\"styleguide-nav\">\n          <li>\n            <NavLink exact={true} to=\"/\" activeClassName=\"is-active-link\">Introduction</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/methodoloy\" activeClassName=\"is-active-link\">Methodology</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/colors\" activeClassName=\"is-active-link\">Colors</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/typography\" activeClassName=\"is-active-link\">Typography</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/buttons\" activeClassName=\"is-active-link\">Buttons</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/forms\" activeClassName=\"is-active-link\">Forms</NavLink>\n          </li>\n        </ul>\n        <div className=\"authors\">\n          <span>Felix Macho</span>\n          <span>Simon Sölder</span>\n\n        </div>\n      </nav>\n\n      {/* Switch */}\n      <Switch>\n        <Route exact path=\"/\">\n          <Introduction />\n        </Route>\n        <Route path=\"/colors\">\n          <Colors />\n        </Route>\n        <Route path=\"/typography\">\n          <Typography />\n        </Route>\n        <Route path=\"/buttons\">\n          <Buttons />\n        </Route>\n        <Route path=\"/forms\">\n          <Forms />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}